class Node:
    def __init__(self,data=None,next=None):
        self.data = data
        self.next = next 

class Linkedlist:
    def __init__(self):
        self.head = None 
    
    def insert_begin(self,data):
        node = Node(data,self.head)
        self.head = node 
    
    def print(self):
        if self.head is None:
            print("Not linked list")
            return
        
        itr = self.head 
        llp = ''
        while itr:
            llp += str(itr.data) + '--->'
            itr = itr.next
        print(llp)
    
    def insert_end(self,data):
        if self.head is None:
            self.head = Node(data,None)
            return
        
        itr = self.head 
        
        while itr.next:
            itr = itr.next 
        
        itr.next = Node(data,None)
    
    def insert_values(self,data_list):
        self.head = None 

        for data in data_list:
            self.insert_end(data)
        
    
    def get_length(self):
        count = 0 
        itr = self.head 

        while itr:
            itr = itr.next 
            count +=1 
        return count
    
    def remove_at(self,index):
        if index <0 or index > self.get_length():
            print("this is not a valid index")
        
        if index == 0:
            self.head = self.head.next 
            return 
        
        itr = self.head 
        count = 0
        while itr:
            if count == index-1:
                itr.next = itr.next.next
                break

            itr = itr.next 
            count +=1
    
    def insert_at(self,index,data):
        count = 0 
        itr = self.head 

        if index == 0:
            self.insert_begin(data)

        while itr:
            if count == index-1:
                node = Node(data,itr.next)
                itr.next = node 
                break

            itr = itr.next
            count +=1
    
    def back_traversal(self): 
        prev = None 
        itr = self.head  

        while itr:
            temp = itr.next 
            itr.next = prev
            prev = itr 
            itr = temp  
        self.head = prev

        

    

n1 = Linkedlist()
n1.insert_values(['apple','bat','cat','dog','elephant'])
print(n1.get_length())
n1.back_traversal()
n1.print()
